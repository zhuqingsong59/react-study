{"ast":null,"code":"var _jsxFileName = \"/Users/zqs/personal/react-study/src/components/calculator/index.js\";\nimport React from 'react';\nimport TemperatureInput from './temperatureInput';\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCelsiusChange = temperature => {\n      this.setState({\n        scale: 'c',\n        temperature\n      });\n    };\n\n    this.handleFahrenheitChange = temperature => {\n      this.setState({\n        scale: 'f',\n        temperature\n      });\n    };\n\n    this.state = {\n      scale: 'c',\n      temperature: ''\n    };\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TemperatureInput, {\n      onTemperatureChange: this.handleCelsiusChange,\n      temperature: celsius,\n      scale: \"c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(TemperatureInput, {\n      onTemperatureChange: this.handleFahrenheitChange,\n      temperature: fahrenheit,\n      scale: \"f\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/zqs/personal/react-study/src/components/calculator/index.js"],"names":["React","TemperatureInput","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","Component","constructor","props","handleCelsiusChange","setState","scale","handleFahrenheitChange","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AACA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACD;;AAED,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACD;;AAED,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,OAAjC,EAA0C;AACxC,QAAMC,KAAK,GAAGC,UAAU,CAACH,WAAD,CAAxB;;AACA,MAAII,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACvB,WAAO,EAAP;AACD;;AACD,QAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,SAAOC,OAAO,CAACG,QAAR,EAAP;AACD;;AAED,MAAMC,UAAN,SAAyBlB,KAAK,CAACmB,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAOpBC,mBAPoB,GAOGf,WAAD,IAAiB;AACrC,WAAKgB,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAajB,QAAAA;AAAb,OAAd;AACD,KATmB;;AAAA,SAWpBkB,sBAXoB,GAWMlB,WAAD,IAAiB;AACxC,WAAKgB,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAajB,QAAAA;AAAb,OAAd;AACD,KAbmB;;AAElB,SAAKmB,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,GADI;AAEXjB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAQDoB,EAAAA,MAAM,GAAG;AACP,UAAMH,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAzB;AACA,UAAMjB,WAAW,GAAG,KAAKmB,KAAL,CAAWnB,WAA/B;AACA,UAAMF,OAAO,GAAGmB,KAAK,KAAK,GAAV,GAAgBlB,UAAU,CAACC,WAAD,EAAcL,SAAd,CAA1B,GAAqDK,WAArE;AACA,UAAMJ,UAAU,GAAGqB,KAAK,KAAK,GAAV,GAAgBlB,UAAU,CAACC,WAAD,EAAcH,YAAd,CAA1B,GAAwDG,WAA3E;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,mBAAmB,EAAE,KAAKe,mBAD5B;AAEE,MAAA,WAAW,EAAEjB,OAFf;AAGE,MAAA,KAAK,EAAC,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,gBAAD;AACE,MAAA,mBAAmB,EAAE,KAAKoB,sBAD5B;AAEE,MAAA,WAAW,EAAEtB,UAFf;AAGE,MAAA,KAAK,EAAC,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAYD;;AAhCsC;;AAkCzC,eAAee,UAAf","sourcesContent":["import React from 'react';\nimport TemperatureInput from './temperatureInput'\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass Calculator extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      scale: 'c',\n      temperature: ''\n    }\n  }\n  handleCelsiusChange = (temperature) => {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange = (temperature) => {\n    this.setState({scale: 'f', temperature});\n  }\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return (\n      <div>\n        <TemperatureInput\n          onTemperatureChange={this.handleCelsiusChange}\n          temperature={celsius}\n          scale=\"c\" />\n        <TemperatureInput\n          onTemperatureChange={this.handleFahrenheitChange}\n          temperature={fahrenheit}\n          scale=\"f\" />\n      </div>\n    );\n  }\n}\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}